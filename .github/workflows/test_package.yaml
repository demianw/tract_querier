name: test, package

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - master

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      # max-parallel: 6
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.9', '3.10', '3.11']
        requires: ['minimal', 'latest']

    steps:
    - name: Check out repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set min. dependencies
      if: matrix.requires == 'minimal'
      run: |
        sed -E -i '/dependencies = \[/,/]/ s/>=([^,<]+)/==\1/g' pyproject.toml

    # - name: Cache pip
    #   uses: actions/cache@v2
    #   id: cache
    #   with:
    #     path: ${{ env.pythonLocation }}
    #     # Look to see if there is a cache hit for the corresponding requirements files
    #     key: ${{ env.pythonLocation }}-${{ hashFiles('requirements/*') }}
    #     restore-keys: |
    #       ${{ env.pythonLocation }}-

    - name: Install dependencies
      # if: steps.cache.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade --user pip setuptools coverage
        pip install -e .[test]
        python --version
        pip --version
        pip list

    - name: Run tests
      run: |
        coverage run --source tract_querier -m pytest -v tract_querier

    - name: Statistics
      if: success()
      run: |
         coverage report
